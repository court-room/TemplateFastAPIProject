[tool.poetry]
name = "template-fastapi-project"
version = "0.1.0"
description = "Template FastAPI project using poetry"
authors = ["Mayank Pathak <onlinejudge95@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["standard"], version = "^0.115.11"}
pydantic-settings = "^2.8.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.9"
mypy = "^1.15.0"
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
lxml = "^5.3.1"

[tool.ruff]
include = ["*.py"]
line-length = 120
output-format = "grouped"
respect-gitignore = true
src = ["src"]

[tool.ruff.format]
docstring-code-format = true
line-ending = "native"
quote-style = "double"
skip-magic-trailing-comma = true

[tool.mypy]
ignore_missing_imports = true
files = "src/**/*.py"
disallow_any_unimported = true
disallow_untyped_calls = true
disallow_untyped_defs = true
allow_untyped_globals = false
allow_redefinition = false
show_error_context = true
pretty = true
color_output = true
error_summary = true
html_report = "./reports/mypy/"

[tool.coverage.run]
branch = true

[tool.coverage.report]
fail_under = 0
precision = 2

[tool.pytest.ini_options]
addopts = "--cov-config pyproject.toml --cov src --cov-report html:reports/pytest --cov-report xml:reports/coverage.xml --cov-report term-missing"
console_output_style = "progress"
required_plugins = "pytest-cov"
# required_plugins = "pytest-cov pytest-mock pytest-asyncio"
tmp_path_retention_policy = "none"
testpaths = ["tests"]
# asyncio_default_fixture_loop_scope = "function"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
